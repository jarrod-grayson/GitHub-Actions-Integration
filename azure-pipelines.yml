# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Default

steps:
- script: echo Compile
  displayName: 'Preparation [GIT]'

- script: echo Build Sample App
  displayName: 'Build [MAVEN]'

- script: echo Unit Testing
  displayName: 'Code Analysis [SONAR]'

- script: echo Environment
  displayName: 'Deployment [DOCKER]'

- script: echo Application Deployment
  displayName: 'Staging'

- script: echo Test
  displayName: 'Prepare Testing'

- task: CmdLine@1
  inputs:
    filename: '"C:\Program Files (x86)\TRICENTIS\Tosca Testsuite\ToscaCommander\ToscaCI\Client\ToscaCIClient.exe"'
    arguments: '-m local -c "C:\Tricentis\Automation\ToscaCI\ConfigAPI.xml" -t junit - r "C:\Tosca_Projects\ToscaCIResults\Results.xml"''     '
  displayName: 'Run Tosca API Tests'

- task: PowerShell@2
  inputs:
    filePath: "$(System.DefaultWorkingDirectory)/UploadToscaResultsToQtest.ps1"
  displayName: 'Upload Tosca API Automation Results to qTest'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'mvn test'
  displayName: 'Run Cucumber Integration Tests'

- task: PowerShell@2
  inputs:
    filePath: "$(System.DefaultWorkingDirectory)/UploadCucumberResultsToQtest.ps1"
  displayName: 'Upload Cucumber Integration Automation Results to qTest'

- task: CmdLine@1
  inputs:
    filename: '"C:\Program Files (x86)\TRICENTIS\Tosca Testsuite\ToscaCommander\ToscaCI\Client\ToscaCIClient.exe"'
    arguments: '-m local -c "C:\Tricentis\Automation\ToscaCI\ConfigRegression.xml" -t junit - r "C:\Tosca_Projects\ToscaCIResults\Results.xml"''     '
  displayName: 'Run Tosca Functional Regression Tests'

- task: PowerShell@2
  inputs:
    filePath: "$(System.DefaultWorkingDirectory)/UploadToscaResultsToQtest.ps1"
  displayName: 'Upload Tosca Functional Regression Automation Results to qTest'

- script: |
    echo Start NeoLoad infrastructure
    echo Execute Performance Tests
  displayName: 'Performance Testing'

- script: echo Publish Artifacts
  displayName: 'Publish Artifact drop'